{"ast":null,"code":"import _slicedToArray from \"/Users/abdelrhmansafwat/Documents/projects/presentations/react/react-2/react-getting-started/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/abdelrhmansafwat/Documents/projects/presentations/react/react-2/react-getting-started/src/room/Room.js\";\n\nimport React, { useState } from 'react';\nimport { render } from 'react-dom';\n\nvar Room = function Room() {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isLit = _useState2[0],\n      setLit = _useState2[1];\n\n  var brigthness = isLit ? 'lit' : 'dark';\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"room \".concat(brigthness),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 5\n    }\n  }, \"the room is \", isLit ? 'lit' : 'dark', /*#__PURE__*/React.createElement(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: function onClick() {\n      return setLit(!isLit);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }\n  }, \"flip\"));\n};\n\nexport default Room;\nrender( /*#__PURE__*/React.createElement(Room, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 8\n  }\n}), document.getElementById('root'));","map":{"version":3,"sources":["/Users/abdelrhmansafwat/Documents/projects/presentations/react/react-2/react-getting-started/src/room/Room.js"],"names":["React","useState","render","Room","isLit","setLit","brigthness","document","getElementById"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,SAASC,MAAT,QAAuB,WAAvB;;AACA,IAAMC,IAAI,GAAG,SAAPA,IAAO,GAAM;AAAA,kBACOF,QAAQ,CAAC,KAAD,CADf;AAAA;AAAA,MACVG,KADU;AAAA,MACHC,MADG;;AAEjB,MAAMC,UAAU,GAAGF,KAAK,GAAG,KAAH,GAAW,MAAnC;AACA,sBACE;AAAK,IAAA,SAAS,iBAAUE,UAAV,CAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACeF,KAAK,GAAG,KAAH,GAAW,MAD/B,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAQE;AAAQ,IAAA,OAAO,EAAE;AAAA,aAAMC,MAAM,CAAC,CAACD,KAAF,CAAZ;AAAA,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YARF,CADF;AAkBD,CArBD;;AAuBA,eAAeD,IAAf;AAEAD,MAAM,eAAC,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAD,EAAWK,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAX,CAAN","sourcesContent":["import React, { useState } from 'react';\n\nimport { render } from 'react-dom';\nconst Room = () => {\n  const [isLit, setLit] = useState(false);\n  const brigthness = isLit ? 'lit' : 'dark';\n  return (\n    <div className={`room ${brigthness}`}>\n      the room is {isLit ? 'lit' : 'dark'}\n      <br />\n      {/*\n      Wrapping with an arrow function\n      delays execution until the click\n      âœ…\n      */}\n      <button onClick={() => setLit(!isLit)}>flip</button>\n      {/*\n       Unwrapped call to setLit will happen\n       before the button is even rendered!\n      ðŸ’¥\n      */}\n      {/* <button onClick={setLit(!isLit)}> flip </button> */}\n    </div>\n  );\n};\n\nexport default Room;\n\nrender(<Room />, document.getElementById('root'));\n"]},"metadata":{},"sourceType":"module"}